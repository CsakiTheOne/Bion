--
-- Script was generated by Devart dbForge Studio 2019 for MySQL, Version 8.2.23.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 2020. 03. 26. 17:31:34
-- Server version: 5.5.5-10.4.6-MariaDB
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

DROP DATABASE IF EXISTS bion;

CREATE DATABASE bion
	CHARACTER SET utf8
	COLLATE utf8_hungarian_ci;

--
-- Set default database
--
USE bion;

--
-- Create table `users`
--
CREATE TABLE users (
  id INT(11) NOT NULL AUTO_INCREMENT,
  uniqId VARCHAR(23) NOT NULL,
  username VARCHAR(32) NOT NULL,
  password VARCHAR(64) NOT NULL,
  email VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `UserGetByUsername`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByUsername(IN paramUsername VARCHAR(32))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.username = paramUsername;
END
$$

--
-- Create procedure `UserGetByUniqId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByUniqId(IN paramUniqId VARCHAR(23))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.uniqId = paramUniqId;
END
$$

--
-- Create procedure `UserGetByEmail`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByEmail(IN paramEmail VARCHAR(50))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.email = paramEmail;
END
$$

--
-- Create procedure `UserGetByCredentials`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByCredentials(IN paramUsername VARCHAR(32), IN paramPassword VARCHAR(64))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.username = paramUsername
AND users.password = paramPassword;
END
$$

--
-- Create procedure `UserCreate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserCreate(IN paramUniqId VARCHAR(23), IN paramUsername VARCHAR(32), IN paramPassword VARCHAR(64), IN paramEmail VARCHAR(50))
BEGIN
INSERT INTO users (uniqId, username, password, email)
  VALUES ();
SELECT
  @@LAST_INSERT_ID AS id;
END
$$

DELIMITER ;

--
-- Create table `categories`
--
CREATE TABLE categories (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 11,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `ThemeGetByUserUniqIdWithCategory`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByUserUniqIdWithCategory(IN paramUserUniqId VARCHAR(23))
BEGIN
SELECT
  categories.name,
  theme.userUniqId,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id
WHERE userUniqId = paramUserUniqId;
END
$$

--
-- Create procedure `ThemeGetAllWithCategory`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetAllWithCategory()
BEGIN
SELECT
  categories.name,
  theme.userUniqId,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id;
END
$$

--
-- Create procedure `ThemeGetAllByCategory`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetAllByCategory(IN paramCategory VARCHAR(23))
BEGIN
SELECT
  theme.userUniqId,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.Id;
END
$$

DELIMITER ;

--
-- Create table `theme`
--
CREATE TABLE theme (
  id INT(11) NOT NULL AUTO_INCREMENT,
  categoryId INT(11) NOT NULL,
  userUniqId VARCHAR(23) NOT NULL,
  date DATETIME NOT NULL,
  text TEXT NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `ThemeDeleteById`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeDeleteById(IN paramId INT)
BEGIN
DELETE
  FROM theme
WHERE id = paramId;
END
$$

--
-- Create procedure `ThemeCreate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeCreate(IN paramCategoryId INT, IN paramUniqId VARCHAR(23), IN paramDate DATETIME, IN paramText TEXT)
BEGIN
INSERT INTO theme (categoryId, userUniqId, date, text)
  VALUES (paramCategoryId, paramUniqId, paramDate, paramText);
SELECT
  @@LAST_INSERT_ID AS id;
END
$$

DELIMITER ;

--
-- Create table `comments`
--
CREATE TABLE comments (
  id INT(11) NOT NULL AUTO_INCREMENT,
  userUniqId VARCHAR(23) NOT NULL,
  text TEXT NOT NULL,
  date DATETIME NOT NULL,
  themeId INT(11) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `CommentDelete`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentDelete(IN paramId INT)
BEGIN
DELETE
  FROM comments
WHERE comments.id = paramId;
END
$$

--
-- Create procedure `CommentCreate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentCreate(IN paramUserUniqId VARCHAR(23), IN paramText TEXT, IN paramDate DATETIME, IN paramThemeId INT)
BEGIN
INSERT INTO comments (userUniqId, text, date, themeId)
  VALUES (paramUserUniqId, paramText, paramDate, paramThemeId);
SELECT
  @@LAST_INSERT_ID AS id;
END
$$

--
-- Create procedure `ThemeGetByUserUniqId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByUserUniqId(IN paramUserUniqId VARCHAR(23))
BEGIN
SELECT
  theme.categoryId,
  theme.date,
  theme.text
FROM theme
WHERE userUniqId = paramUserUniqId;
END
$$

--
-- Create procedure `ThemeGetAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetAll()
BEGIN
SELECT
  theme.categoryId,
  theme.userUniqId,
  theme.date,
  theme.text
FROM theme;
END
$$

--
-- Create procedure `CommentGetByThemeId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentGetByThemeId(IN paramThemeId INT)
BEGIN
SELECT
  comments.userUniqId,
  comments.text,
  comments.date
FROM comments
WHERE comments.themeId = paramThemeId;
END
$$

--
-- Create procedure `CategoriesGetById`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CategoriesGetById(IN paramId INT)
BEGIN
SELECT
  categories.name
FROM categories
WHERE categories.id = paramId;
END
$$

--
-- Create procedure `CategoriesGetAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CategoriesGetAll()
BEGIN
SELECT
  categories.name
FROM categories;
END
$$

DELIMITER ;

-- 
-- Dumping data for table users
--
-- Table bion.users does not contain any data (it is empty)

-- 
-- Dumping data for table theme
--
-- Table bion.theme does not contain any data (it is empty)

-- 
-- Dumping data for table comments
--
-- Table bion.comments does not contain any data (it is empty)

-- 
-- Dumping data for table categories
--
INSERT INTO categories VALUES
(1, 'Kémia'),
(2, 'Matematika'),
(3, 'Irodalom'),
(4, 'Nyelvtan'),
(5, 'Történelem'),
(6, 'Fizika'),
(7, 'Biológia'),
(8, 'Idegen nyelv'),
(9, 'Földrajz'),
(10, 'Informatika');

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;