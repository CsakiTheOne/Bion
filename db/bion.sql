--
-- Script was generated by Devart dbForge Studio 2019 for MySQL, Version 8.2.23.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 2020. 04. 01. 21:17:48
-- Server version: 5.5.5-10.4.8-MariaDB
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

DROP DATABASE IF EXISTS bion;

CREATE DATABASE bion
	CHARACTER SET utf8
	COLLATE utf8_hungarian_ci;

--
-- Set default database
--
USE bion;

--
-- Create table `categories`
--
CREATE TABLE categories (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 11,
AVG_ROW_LENGTH = 1638,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `ThemeGetByUserUniqIdWithCategory`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByUserUniqIdWithCategory(IN paramUsername VARCHAR(32))
BEGIN
SELECT
  users.username,
  theme.id,
  theme.header,
  categories.name,
  theme.userUniqId,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id
  INNER JOIN users
    ON theme.userUniqId = users.uniqId
WHERE users.username = paramUsername;
END
$$

--
-- Create procedure `ThemeGetByParam`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByParam(IN paramText TEXT)
BEGIN
SELECT
  theme.header,
  theme.id,
  categories.name,
  users.username,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id
  INNER JOIN users
    ON theme.userUniqId = users.uniqId
WHERE theme.text LIKE CONCAT("%", paramText, "%")
OR users.username LIKE CONCAT("%", paramText, "%");
END
$$

--
-- Create procedure `ThemeGetByIdWithCategoryAndCreator`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByIdWithCategoryAndCreator(IN paramId INT)
BEGIN
SELECT
  theme.header,
  categories.name,
  users.username,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id
  INNER JOIN users
    ON theme.userUniqId = users.uniqId
WHERE theme.id = paramId;
END
$$

--
-- Create procedure `ThemeGetByCategoryAndText`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByCategoryAndText(IN paramText TEXT, IN paramCategory VARCHAR(255))
BEGIN
SELECT
  theme.header,
  theme.id,
  categories.name,
  users.username,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id
  INNER JOIN users
    ON theme.userUniqId = users.uniqId
WHERE categories.name = paramCategory
AND (theme.text LIKE CONCAT("%", paramText, "%")
OR users.username LIKE CONCAT("%", paramText, "%"));
END
$$

--
-- Create procedure `ThemeGetAllWithCategoryAndCreator`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetAllWithCategoryAndCreator()
BEGIN
SELECT
  theme.header,
  theme.id,
  categories.name,
  users.username,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.id
  INNER JOIN users
    ON theme.userUniqId = users.uniqId;
END
$$

--
-- Create procedure `ThemeGetAllByCategory`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetAllByCategory(IN paramCategory VARCHAR(23))
BEGIN
SELECT
  theme.id,
  theme.header,
  users.username,
  categories.name,
  theme.date,
  theme.text
FROM theme
  INNER JOIN categories
    ON theme.categoryId = categories.Id
  INNER JOIN users
    ON users.uniqId = theme.userUniqId
WHERE categories.name = paramCategory;
END
$$

DELIMITER ;

--
-- Create table `theme`
--
CREATE TABLE theme (
  id INT(11) NOT NULL AUTO_INCREMENT,
  categoryId INT(11) NOT NULL,
  userUniqId VARCHAR(23) NOT NULL,
  date DATETIME NOT NULL,
  text TEXT NOT NULL,
  header VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 13,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `ThemeDeleteById`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeDeleteById(IN paramId INT)
BEGIN
DELETE
  FROM theme
WHERE id = paramId;
END
$$

--
-- Create procedure `ThemeCreate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeCreate(IN paramCategoryId INT, IN paramUniqId VARCHAR(23), IN paramDate DATETIME, IN paramText TEXT, IN paramHeader VARCHAR(255))
BEGIN
INSERT INTO theme (categoryId, userUniqId, date, text, header)
  VALUES (paramCategoryId, paramUniqId, paramDate, paramText, paramHeader);
SELECT
  @@LAST_INSERT_ID AS id;
END
$$

DELIMITER ;

--
-- Create table `users`
--
CREATE TABLE users (
  id INT(11) NOT NULL AUTO_INCREMENT,
  uniqId VARCHAR(23) NOT NULL,
  username VARCHAR(32) NOT NULL,
  password VARCHAR(64) NOT NULL,
  email VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 17,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `UserGetByUsername`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByUsername(IN paramUsername VARCHAR(32))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.username = paramUsername;
END
$$

--
-- Create procedure `UserGetByUniqId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByUniqId(IN paramUniqId VARCHAR(23))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.uniqId = paramUniqId;
END
$$

--
-- Create procedure `UserGetByEmail`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByEmail(IN paramEmail VARCHAR(50))
BEGIN
SELECT
  users.uniqId,
  users.username,
  users.email
FROM users
WHERE users.email = paramEmail;
END
$$

--
-- Create procedure `UserGetByCredentials`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserGetByCredentials(IN paramEmail VARCHAR(32), IN paramPassword VARCHAR(64))
BEGIN
SELECT
  users.uniqId,
  users.username
FROM users
WHERE users.email = paramEmail
AND users.password = paramPassword;
END
$$

--
-- Create procedure `UserCreate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE UserCreate(IN paramUniqId VARCHAR(23), IN paramUsername VARCHAR(32), IN paramPassword VARCHAR(64), IN paramEmail VARCHAR(50))
BEGIN
INSERT INTO users (uniqId, username, password, email)
  VALUES (paramUniqId, paramUsername, paramPassword, paramEmail);
SELECT
  @@LAST_INSERT_ID AS id;
END
$$

--
-- Create procedure `CommentGetByUsername`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentGetByUsername(IN paramUsername VARCHAR(32))
BEGIN
SELECT
  users.username,
  comments.id,
  comments.text,
  comments.date
FROM comments
  INNER JOIN users
    ON users.uniqId = comments.userUniqId
WHERE users.username = paramUsername;
END
$$

--
-- Create procedure `CommentGetByThemeIdWithCreator`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentGetByThemeIdWithCreator(IN paramThemeId INT)
BEGIN
SELECT
  users.username,
  comments.id,
  comments.text,
  comments.date
FROM comments
  INNER JOIN users
    ON users.uniqId = comments.userUniqId
WHERE comments.themeId = paramThemeId;
END
$$

DELIMITER ;

--
-- Create table `comments`
--
CREATE TABLE comments (
  id INT(11) NOT NULL AUTO_INCREMENT,
  userUniqId VARCHAR(23) NOT NULL,
  text TEXT NOT NULL,
  date DATETIME NOT NULL,
  themeId INT(11) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 34,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8,
COLLATE utf8_hungarian_ci;

DELIMITER $$

--
-- Create procedure `CommentDelete`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentDelete(IN paramId INT)
BEGIN
DELETE
  FROM comments
WHERE comments.id = paramId;
END
$$

--
-- Create procedure `CommentCreate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentCreate(IN paramUserUniqId VARCHAR(23), IN paramText TEXT, IN paramDate DATETIME, IN paramThemeId INT)
BEGIN
INSERT INTO comments (userUniqId, text, date, themeId)
  VALUES (paramUserUniqId, paramText, paramDate, paramThemeId);
SELECT
  @@LAST_INSERT_ID AS id;
END
$$

--
-- Create procedure `ThemeGetByUserUniqId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetByUserUniqId(IN paramUserUniqId VARCHAR(23))
BEGIN
SELECT
  theme.header,
  theme.categoryId,
  theme.date,
  theme.text
FROM theme
WHERE userUniqId = paramUserUniqId;
END
$$

--
-- Create procedure `ThemeGetAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ThemeGetAll()
BEGIN
SELECT
  theme.id,
  theme.header,
  theme.categoryId,
  theme.userUniqId,
  theme.date,
  theme.text
FROM theme;
END
$$

--
-- Create procedure `CommentGetByThemeId`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CommentGetByThemeId(IN paramThemeId INT)
BEGIN
SELECT
  comments.userUniqId,
  comments.text,
  comments.date
FROM comments
WHERE comments.themeId = paramThemeId;
END
$$

--
-- Create procedure `CategoriesGetById`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CategoriesGetById(IN paramId INT)
BEGIN
SELECT
  categories.name
FROM categories
WHERE categories.id = paramId;
END
$$

--
-- Create procedure `CategoriesGetAll`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE CategoriesGetAll()
BEGIN
SELECT
  categories.id,
  categories.name
FROM categories;
END
$$

DELIMITER ;

-- 
-- Dumping data for table users
--
INSERT INTO users VALUES
(10, 'asd@asd.asd5e7e4478cebc', 'asd', '688787d8ff144c502c7f5cffaafe2cc588d86079f9de88304c26b0cb99ce91c6', 'asd@asd.asd'),
(12, '5e821c91ba37a8.03248284', 'b.richi1230@gmail.com', '3dbaa1faa39d9e5a7fd7b4a9dfc4058e0ca0a0c8d2b3a918553864317bcadac5', 'b.richi1230@gmail.com'),
(13, '5e831925257db9.38262085', 'zimavagyok', 'ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb', 'akarmi@gmail.com'),
(14, '5e84e760749326.26611439', 'xd', '8cf2283ad6ef0a3266059b418a73f8479338233ea2c4bcd3c1f51c39f13ae7dc', 'xd@x.d'),
(15, '5e84e7be9510b2.20132399', 'dik', '025da59d511235471cad04c0f35fd44153175c1f35aaf35263ba7f5ee88d4b8b', 'dik@d.ik'),
(16, '5e84e81e068482.79897964', 'dikk', 'ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb', 'dikk@di.kk');

-- 
-- Dumping data for table theme
--
INSERT INTO theme VALUES
(3, 10, '5e821c91ba37a8.03248284', '2020-03-30 00:00:00', 'egy jó szakdolgozat írás', NULL),
(5, 10, '5e821c91ba37a8.03248284', '2020-03-30 19:33:06', 'KREY <3', NULL),
(9, 1, '5e831925257db9.38262085', '2020-03-31 12:30:35', 'fdsfsd', NULL),
(10, 5, '5e831925257db9.38262085', '2020-03-31 20:41:56', 'dsadas', 'adasda'),
(11, 1, '5e831925257db9.38262085', '2020-03-31 20:54:48', 'dasdas', 'gfsdgfd'),
(12, 1, '5e84e81e068482.79897964', '2020-04-01 21:15:05', 'Hurda', 'Nem');

-- 
-- Dumping data for table comments
--
INSERT INTO comments VALUES
(1, '5e821c91ba37a8.03248284', 'legyéjóó', '2020-03-30 21:08:24', 3),
(2, '5e831925257db9.38262085', 'fgh', '2020-03-31 15:49:22', 3),
(3, '5e831925257db9.38262085', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', '2020-03-31 15:49:36', 3),
(4, '5e831925257db9.38262085', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', '2020-03-31 15:53:32', 3),
(5, '5e831925257db9.38262085', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', '2020-03-31 16:10:34', 3),
(6, '5e831925257db9.38262085', 'xddddddd', '2020-03-31 16:12:08', 9),
(7, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:34', 3),
(8, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:35', 3),
(9, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:41', 3),
(10, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:41', 3),
(11, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:41', 3),
(12, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:42', 3),
(13, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:42', 3),
(14, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:48', 3),
(15, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:48', 3),
(16, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:49', 3),
(17, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:49', 3),
(18, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:49', 3),
(19, '5e821c91ba37a8.03248284', '', '2020-03-31 19:57:50', 3),
(20, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:01', 3),
(21, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:02', 3),
(22, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:02', 3),
(23, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:02', 3),
(24, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:03', 3),
(25, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:03', 3),
(26, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:03', 3),
(27, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:04', 3),
(28, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:04', 3),
(29, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:04', 3),
(30, '5e821c91ba37a8.03248284', '', '2020-03-31 19:58:04', 3),
(31, '5e831925257db9.38262085', '', '2020-03-31 20:42:32', 10),
(32, '5e831925257db9.38262085', 'dsa', '2020-03-31 20:53:26', 10),
(33, '5e831925257db9.38262085', 'dasdas', '2020-03-31 20:56:15', 11);

-- 
-- Dumping data for table categories
--
INSERT INTO categories VALUES
(1, 'Kémia'),
(2, 'Matematika'),
(3, 'Irodalom'),
(4, 'Nyelvtan'),
(5, 'Történelem'),
(6, 'Fizika'),
(7, 'Biológia'),
(8, 'Idegen nyelv'),
(9, 'Földrajz'),
(10, 'Informatika');

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;